# Ejemplo de Acceso Publico Apache
sudo docker run -it -d -p 8000:80 --name apacheserver ubuntu:18.04 /bin/bash
sudo docker exec -it apacheserver /bin/bash
    $ apt-get update
    $ apt-get install apache2
    $ /et/init.d/apache2 start
    $ exit

# Ejemplo Acceso Local con Golang
sudo docker pull golang:alpine
sudo docker run -it -d --name servergo -p 3020:8080 golang:alpine /bin/bash
sudo docker exec -it servergo sh
    $ go version
    $ git version
    $ cd /
    $ mkdir prueba1
    $ cd prueba1
    $ touch main.go
    $ vi main.go
        package main

        import "fmt"

        func main () {
            fmt.Println("Hola desde docker")
        }
    # esc :x para guardar y salir
    $ go run main.go


# Ejemplo desarrollo con VSCode con contenedor Local
# Extension "Remote-Container"
    package main
    import (
        "fmt"
        "log"

        "net/http"

        "github.com/gorilla/mux"
    )

    var PORT = "8080"

    func middlewareCors(next http.Handler) http.Handler {
        return http.HandlerFunc (
            func(w http.ResponseWriter, req *http.Request) {
                w.Header().Set("Access-Control-Allow-Origin", "*")
                w.Header().Set("Access-Control-Allow-Credentials", "true")
                w.Header().Set("Access-Control-Allow-Methods", "POST, GET, OPTIONS, PUT, DELETE")
                w.Header().Set("Access-Control-Allow-Headers", "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization")
                
                next.ServeHTTP(w, req)
            })
    }

    func enableCORS(router *mux.Router) {
        router.PathPrefix("/").HandlerFunc(func(w http.ResponseWriter, req *http.Request) {
                w.Header().Set("Access-Control-Allow-Origin", "*")
        }).Methods(http.MethodOptions)
        
        router.Use(middlewareCors)
    }

    func rootHandler(w http.ResponseWriter, r *http.Request) {
        fmt.Fprintf(w, "Participacion desde el contenedor de docker, saludos")
    }

    func main() {
        router := mux.NewRouter().StrictSlash(true)
        enableCORS(router)
        
        router.HandleFunc("/", rootHandler).Methods("GET")

        fmt.Println("Servidor pub en puerto", PORT)
        if err := http.ListenAndServe(":"+PORT, router); err != nil {
            log.Fatal(err)
            return
        }
    }
    
        go mod init main
        go mod tidy
        go run main.go